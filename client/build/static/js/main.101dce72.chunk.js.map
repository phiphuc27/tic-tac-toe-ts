{"version":3,"sources":["components/Layout/Wrapper.tsx","global/globalConstants.ts","pages/Game/gameSlice.ts","app/rootReducer.ts","app/store.ts","utils/getWinMoves.ts","utils/getBestMove.ts","pages/Game/gameActions.ts","components/Game/Square.tsx","components/Game/Board.tsx","components/Form/ButtonBox.tsx","components/Form/ButtonContained.tsx","components/Form/Select.tsx","components/Game/History.tsx","components/Game/GameSideBar.tsx","pages/Game/GamePage.tsx","components/NavBar/NavLink.tsx","components/NavBar/NavMenu.tsx","logo.svg","components/NavBar/Navbar.tsx","pages/HomePage.tsx","app/App.tsx","index.tsx"],"names":["Wrapper","size","children","Container","maxWidth","BOARD_SIZE","SQUARE_SIZE","Math","floor","PLAYER","OPPONENT","initialState","board","Array","fill","map","isTurn","winner","name","moves","history","step","score","X","O","opponent","slice","createSlice","reducers","clickSquare","state","payload","square","splice","setWinner","_","cloneDeep","moveJump","subtractScore","point","setOpponent","newGame","quitGame","actions","reducer","rootReducers","combineReducers","game","gameReducer","middleware","getDefaultMiddleware","store","configureStore","rootReducer","useAppDispatch","dispatch","useDispatch","useAppSelector","useSelector","checkRow","row","col","value","winMoves","push","next","prev","sort","a","b","length","win","checkColumn","checkDiagonal","nextRow","nextCol","prevRow","prevCol","checkDiagonal2","getWinMoves","isEmpty","some","item","minimax","move","depth","isMaximize","alpha","beta","evalPlayerBoard","getEmptyBoard","maxEval","Infinity","itemSquare","boardCopy","curEval","max","minEval","min","evalBoard","maxScore","tmpBoard","forEach","i","j","curSquare","curOpponentSquare","checkWinner","checkOpponentWinner","playerWinPoints","opponentWinPoints","tmpScore","abs","filter","getBestMove","bestSquare","evalComputerBoard","bestEval","moveJumpAction","getState","newHistory","useStyles","makeStyles","palette","createStyles","bgColor","current","background","border","width","height","marginRight","marginTop","padding","cursor","transition","square__text","square__text__x","color","primary","main","square__text__o","secondary","Square","handleClick","useTheme","squareColor","X_COLOR","O_COLOR","myStyle","styles","onClick","className","ClearRounded","fontSize","FiberManualRecordOutlined","display","justifyContent","alignItems","Board","mode","useParams","useEffect","bestMove","Box","rowArr","isEqual","ButtonBox","gap","props","gapLength","style","marginBottom","ButtonContained","Button","variant","fullWidth","Select","FormControl","minWidth","InputLabel","id","toLowerCase","labelId","label","History","useState","isAscending","toggleSort","historyRefs","useRef","scrollIntoView","behavior","historyDisplay","historyList","idx","text","ListItem","ref","el","dense","button","disabled","ListItemIcon","Radio","checked","inputProps","ListItemText","primaryTypographyProps","Grid","container","spacing","xs","Typography","defaultValue","Number","onChange","MenuItem","List","maxHeight","overflow","key","GameSideBar","status","setStatus","redirectHistory","useHistory","toUpperCase","Paper","elevation","minHeight","startIcon","Autorenew","ExitToApp","Undo","Redo","Divider","margin","GamePage","menu__item","position","content","bottom","left","backgroundColor","dark","transform","transformOrigin","outline","textDecoration","active","NavLink","Link","component","RouterLink","activeClassName","exact","typography","menu","listStyle","flexGrow","subtitle2","fontWeight","textTransform","letterSpacing","NavMenu","to","appBar","common","white","link","objectFit","title","Navbar","AppBar","Toolbar","src","logo","alt","HomePage","align","App","path","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.101dce72.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Container } from '@material-ui/core';\r\n\r\ninterface WrapperProps {\r\n  children: React.ReactChild;\r\n  size?: 'lg' | 'md' | 'sm' | 'xl' | 'xs' | false;\r\n}\r\n\r\nconst Wrapper: React.FC<WrapperProps> = ({ size = 'lg', children }) => {\r\n  return <Container maxWidth={size}>{children}</Container>;\r\n};\r\n\r\nexport default Wrapper;\r\n","export const BOARD_SIZE = 20;\r\nexport const SQUARE_SIZE = Math.floor(656 / BOARD_SIZE);\r\nexport const WIN_MOVE_LENGTH = 5;\r\nexport const PLAYER = 'X';\r\nexport const OPPONENT = 'O';\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport _ from 'lodash';\r\nimport { BOARD_SIZE } from '../../global/globalConstants';\r\nimport { AppState } from '../../app/rootReducer';\r\nimport {\r\n  ClickSquarePayload,\r\n  GameState,\r\n  MoveJumpPayload,\r\n  SetOpponentPayload,\r\n  SetWinnerPayload,\r\n  SubTractScorePayload,\r\n} from './gameTypes';\r\n\r\nconst initialState: GameState = {\r\n  board: Array(BOARD_SIZE)\r\n    .fill(0)\r\n    .map(() => Array(BOARD_SIZE).fill('')),\r\n  isTurn: true,\r\n  winner: { name: '', moves: [] },\r\n  history: [],\r\n  step: 0,\r\n  score: { X: 0, O: 0 },\r\n  opponent: 'player',\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: 'game',\r\n  initialState,\r\n  reducers: {\r\n    clickSquare: (state, { payload }: PayloadAction<ClickSquarePayload>) => {\r\n      const { board, square } = payload;\r\n      state.board = board;\r\n      state.isTurn = !state.isTurn;\r\n      state.history = [...state.history.splice(0, state.step), square];\r\n      state.step += 1;\r\n    },\r\n\r\n    setWinner: (state, { payload }: PayloadAction<SetWinnerPayload>) => {\r\n      const { winner } = payload;\r\n      state.winner = _.cloneDeep(winner);\r\n      state.score[winner.name] += 1;\r\n    },\r\n\r\n    moveJump: (state, { payload }: PayloadAction<MoveJumpPayload>) => {\r\n      const { board, step } = payload;\r\n      state.board = board;\r\n      state.isTurn = step % 2 === 0;\r\n      state.step = step;\r\n      state.winner = _.cloneDeep(initialState.winner);\r\n    },\r\n\r\n    subtractScore: (state, { payload }: PayloadAction<SubTractScorePayload>) => {\r\n      const { name, point } = payload;\r\n      state.score[name] -= point;\r\n    },\r\n\r\n    setOpponent: (state, { payload }: PayloadAction<SetOpponentPayload>) => {\r\n      const { opponent } = payload;\r\n      state.opponent = opponent;\r\n    },\r\n\r\n    newGame: ({ score, opponent }) => {\r\n      return { ...initialState, score, opponent };\r\n    },\r\n\r\n    quitGame: () => initialState,\r\n  },\r\n});\r\n\r\nconst { actions, reducer } = slice;\r\n\r\nexport const { clickSquare, moveJump, newGame, quitGame, setOpponent, setWinner, subtractScore } =\r\n  actions;\r\n\r\nexport const gameSelector = (state: AppState) => state.game;\r\n\r\nexport default reducer;\r\n","import { combineReducers } from '@reduxjs/toolkit';\r\nimport gameReducer from '../pages/Game/gameSlice';\r\n\r\nconst rootReducers = combineReducers({\r\n  game: gameReducer,\r\n});\r\n\r\nexport type AppState = ReturnType<typeof rootReducers>;\r\n\r\nexport default rootReducers;\r\n","import { Action, configureStore, ThunkAction, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport rootReducer, { AppState } from './rootReducer';\r\n\r\nconst middleware = [...getDefaultMiddleware()];\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware,\r\n});\r\n\r\nconst { dispatch } = store;\r\n\r\nexport type AppDispatch = typeof dispatch;\r\nexport type AppThunk = ThunkAction<void, AppState, unknown, Action>;\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<AppState> = useSelector;\r\n\r\nexport default store;\r\n","import { Square, Winner, Move } from '../pages/Game/gameTypes';\r\nimport { WIN_MOVE_LENGTH } from '../global/globalConstants';\r\n\r\nconst checkRow = (square: Square, board: string[][]) => {\r\n  const { row, col, value } = square;\r\n  const winMoves: Move[] = [];\r\n\r\n  winMoves.push({ row, col });\r\n\r\n  let next = col + 1;\r\n  let prev = col - 1;\r\n\r\n  while (board[row][next] === value) {\r\n    winMoves.push({ row, col: next });\r\n    next++;\r\n  }\r\n\r\n  while (board[row][prev] === value) {\r\n    winMoves.push({ row, col: prev });\r\n    prev--;\r\n  }\r\n\r\n  const sort = winMoves.sort((a, b) => a.col - b.col);\r\n\r\n  if (sort.length === WIN_MOVE_LENGTH) {\r\n    if (board[row][prev] !== value && board[row][next] !== value) {\r\n      return { sort, win: true };\r\n    }\r\n  }\r\n  return { sort, win: false };\r\n};\r\n\r\nconst checkColumn = (square: Square, board: string[][]) => {\r\n  const { row, col, value } = square;\r\n  const winMoves: Move[] = [];\r\n\r\n  winMoves.push({ row, col });\r\n\r\n  let next = row + 1;\r\n  let prev = row - 1;\r\n\r\n  while (board[next] && board[next][col] === value) {\r\n    winMoves.push({ row: next, col });\r\n    next++;\r\n  }\r\n\r\n  while (board[prev] && board[prev][col] === value) {\r\n    winMoves.push({ row: prev, col });\r\n    prev--;\r\n  }\r\n\r\n  const sort = winMoves.sort((a, b) => a.row - b.row);\r\n\r\n  if (sort.length === WIN_MOVE_LENGTH) {\r\n    if (\r\n      (!board[prev] || board[prev][col] !== value) &&\r\n      (!board[next] || board[next][col] !== value)\r\n    ) {\r\n      return { sort, win: true };\r\n    }\r\n  }\r\n  return { sort, win: false };\r\n};\r\n\r\nconst checkDiagonal = (square: Square, board: string[][]) => {\r\n  const { row, col, value } = square;\r\n  const winMoves: Move[] = [];\r\n\r\n  winMoves.push({ row, col });\r\n\r\n  let nextRow = row + 1;\r\n  let nextCol = col + 1;\r\n  let prevRow = row - 1;\r\n  let prevCol = col - 1;\r\n\r\n  while (board[nextRow] && board[nextRow][nextCol] === value) {\r\n    winMoves.push({ row: nextRow, col: nextCol });\r\n    nextRow++;\r\n    nextCol++;\r\n  }\r\n\r\n  while (board[prevRow] && board[prevRow][prevCol] === value) {\r\n    winMoves.push({ row: prevRow, col: prevCol });\r\n    prevRow--;\r\n    prevCol--;\r\n  }\r\n\r\n  const sort = winMoves.sort((a, b) => a.row - b.row);\r\n\r\n  if (sort.length === WIN_MOVE_LENGTH) {\r\n    if (\r\n      (!board[prevRow] || board[prevRow][prevCol] !== value) &&\r\n      (!board[nextRow] || board[nextRow][nextCol] !== value)\r\n    ) {\r\n      return { sort, win: true };\r\n    }\r\n  }\r\n  return { sort, win: false };\r\n};\r\n\r\nconst checkDiagonal2 = (square: Square, board: string[][]) => {\r\n  const { row, col, value } = square;\r\n  const winMoves: Move[] = [];\r\n\r\n  winMoves.push({ row, col });\r\n\r\n  let nextRow = row - 1;\r\n  let nextCol = col + 1;\r\n  let prevRow = row + 1;\r\n  let prevCol = col - 1;\r\n\r\n  while (board[nextRow] && board[nextRow][nextCol] === value) {\r\n    winMoves.push({ row: nextRow, col: nextCol });\r\n    nextRow--;\r\n    nextCol++;\r\n  }\r\n\r\n  while (board[prevRow] && board[prevRow][prevCol] === value) {\r\n    winMoves.push({ row: prevRow, col: prevCol });\r\n    prevRow++;\r\n    prevCol--;\r\n  }\r\n\r\n  const sort = winMoves.sort((a, b) => a.col - b.col);\r\n\r\n  if (sort.length === WIN_MOVE_LENGTH) {\r\n    if (\r\n      (!board[prevRow] || board[prevRow][prevCol] !== value) &&\r\n      (!board[nextRow] || board[nextRow][nextCol] !== value)\r\n    ) {\r\n      return { sort, win: true };\r\n    }\r\n  }\r\n  return { sort, win: false };\r\n};\r\n\r\nconst getWinMoves = (square: Square, board: string[][]): Winner => {\r\n  const isEmpty = board.some((row) => row.some((item) => item === ''));\r\n\r\n  const { value } = square;\r\n  const moves = [\r\n    checkRow(square, board),\r\n    checkColumn(square, board),\r\n    checkDiagonal(square, board),\r\n    checkDiagonal2(square, board),\r\n  ].sort((a, b) => b.sort.length - a.sort.length)[0];\r\n\r\n  if (moves.sort.length === WIN_MOVE_LENGTH && moves.win) {\r\n    return { name: value, moves: moves.sort };\r\n  }\r\n\r\n  if (!isEmpty) return { name: 'draw', moves: moves.sort };\r\n\r\n  return { name: '', moves: moves.sort };\r\n};\r\n\r\nexport default getWinMoves;\r\n","import { Square } from '../pages/Game/gameTypes';\r\nimport { BOARD_SIZE, OPPONENT, PLAYER } from '../global/globalConstants';\r\nimport getWinMoves from './getWinMoves';\r\nimport _ from 'lodash';\r\n\r\ninterface EvalBoard {\r\n  square: Square;\r\n  score: number;\r\n}\r\n\r\nconst getBestMove = (board: string[][]) => {\r\n  const bestSquare: Square = {\r\n    row: 0,\r\n    col: 0,\r\n    value: OPPONENT,\r\n  };\r\n\r\n  const evalComputerBoard = getEmptyBoard(bestSquare, board);\r\n\r\n  let bestEval = -Infinity;\r\n\r\n  for (let item of evalComputerBoard) {\r\n    const { square: itemSquare } = item;\r\n\r\n    const tmpBoard = _.cloneDeep(board);\r\n    tmpBoard[itemSquare.row][itemSquare.col] = itemSquare.value;\r\n\r\n    const curEval = minimax(item, tmpBoard, 0, false, -Infinity, Infinity);\r\n\r\n    if (curEval >= bestEval) {\r\n      bestSquare.row = itemSquare.row;\r\n      bestSquare.col = itemSquare.col;\r\n      bestEval = curEval;\r\n    }\r\n  }\r\n\r\n  return bestSquare;\r\n};\r\n\r\nconst minimax = (\r\n  move: EvalBoard,\r\n  board: string[][],\r\n  depth: number = 0,\r\n  isMaximize: boolean,\r\n  alpha: number,\r\n  beta: number\r\n): number => {\r\n  const { square, score } = move;\r\n  const winner = getWinMoves(square, board);\r\n  const evalPlayerBoard = getEmptyBoard(square, board);\r\n  if (winner.name || depth === 0) {\r\n    if (winner.name === PLAYER) return score + depth;\r\n    if (winner.name === OPPONENT) return score - depth;\r\n    return score;\r\n  }\r\n\r\n  if (isMaximize) {\r\n    let maxEval = -Infinity;\r\n\r\n    for (let item of evalPlayerBoard) {\r\n      const { square: itemSquare } = item;\r\n\r\n      const boardCopy = _.cloneDeep(board);\r\n      boardCopy[itemSquare.row][itemSquare.col] = OPPONENT;\r\n\r\n      const curEval = minimax(item, boardCopy, depth + 1, true, alpha, beta);\r\n      // console.log(curEval)\r\n\r\n      maxEval = Math.max(maxEval, curEval);\r\n      alpha = Math.max(alpha, maxEval);\r\n      if (beta <= alpha) break;\r\n    }\r\n    // console.log(maxEval);\r\n\r\n    return maxEval;\r\n  } else {\r\n    let minEval = Infinity;\r\n\r\n    for (let item of evalPlayerBoard) {\r\n      const { square: itemSquare } = item;\r\n\r\n      const boardCopy = _.cloneDeep(board);\r\n      boardCopy[itemSquare.row][itemSquare.col] = PLAYER;\r\n\r\n      const curEval = minimax(item, boardCopy, depth + 1, true, alpha, beta);\r\n      // console.log(curEval);\r\n\r\n      minEval = Math.min(minEval, curEval);\r\n      beta = Math.min(beta, minEval);\r\n      if (beta <= alpha) break;\r\n    }\r\n    // console.log(minEval);\r\n    return minEval;\r\n  }\r\n};\r\n\r\nconst getEmptyBoard = (square: Square, board: string[][]): EvalBoard[] => {\r\n  const evalBoard: EvalBoard[] = [];\r\n  let maxScore = -Infinity;\r\n\r\n  const tmpBoard = _.cloneDeep(board);\r\n\r\n  if (!square.value) return evalBoard;\r\n\r\n  const opponent = square.value === PLAYER ? OPPONENT : PLAYER;\r\n\r\n  // Loop all empty spaces and calculate score on that space\r\n  tmpBoard.forEach((row, i) => {\r\n    row.forEach((item, j) => {\r\n      if (!item) {\r\n        item = square.value;\r\n\r\n        const curSquare = { row: i, col: j, value: square.value };\r\n        const curOpponentSquare = { row: i, col: j, value: opponent };\r\n\r\n        // Check if the current square is the winner\r\n        const checkWinner = getWinMoves(curSquare, tmpBoard);\r\n        const checkOpponentWinner = getWinMoves(curOpponentSquare, tmpBoard);\r\n\r\n        const playerWinPoints = checkWinner.moves.length;\r\n        const opponentWinPoints = checkOpponentWinner.moves.length;\r\n\r\n        let tmpScore = Math.abs(playerWinPoints - opponentWinPoints) * BOARD_SIZE - Math.max(i, j);\r\n\r\n        maxScore = Math.max(tmpScore, maxScore);\r\n\r\n        const score = item === PLAYER ? -tmpScore : tmpScore;\r\n        evalBoard.push({ square: curSquare, score });\r\n      }\r\n    });\r\n  });\r\n\r\n  // Sort the empty array\r\n\r\n  return evalBoard.filter((item) => item.score === maxScore || item.score === -maxScore);\r\n};\r\n\r\nexport default getBestMove;\r\n","import _ from 'lodash';\r\nimport { BOARD_SIZE } from '../../global/globalConstants';\r\nimport { AppThunk } from '../../app/store';\r\nimport { Square } from './gameTypes';\r\nimport getBestMove from '../../utils/getBestMove';\r\nimport getWinMoves from '../../utils/getWinMoves';\r\nimport { clickSquare, moveJump, setWinner, subtractScore } from './gameSlice';\r\n\r\n// ====================== Export Actions ======================\r\nexport const clickSquareAction =\r\n  (square: Square): AppThunk =>\r\n  (dispatch, getState) => {\r\n    const {\r\n      game: { board },\r\n    } = getState();\r\n\r\n    const tmpBoard = _.cloneDeep(board);\r\n    tmpBoard[square.row][square.col] = square.value;\r\n\r\n    dispatch(clickSquare({ square, board: tmpBoard }));\r\n\r\n    const winner = getWinMoves(square, tmpBoard);\r\n\r\n    if (winner.name) {\r\n      dispatch(setWinner({ winner }));\r\n    }\r\n  };\r\n\r\nexport const clickSquareComputerAction = (): AppThunk => (dispatch, getState) => {\r\n  const {\r\n    game: { board },\r\n  } = getState();\r\n\r\n  const tmpBoard = _.cloneDeep(board);\r\n\r\n  const bestMove = getBestMove(tmpBoard);\r\n\r\n  tmpBoard[bestMove.row][bestMove.col] = bestMove.value;\r\n\r\n  dispatch(clickSquare({ square: bestMove, board: tmpBoard }));\r\n\r\n  const winner = getWinMoves(bestMove, tmpBoard);\r\n\r\n  if (winner.name) {\r\n    dispatch(setWinner({ winner }));\r\n  }\r\n};\r\n\r\nexport const moveJumpAction =\r\n  (step: number): AppThunk =>\r\n  (dispatch, getState) => {\r\n    const {\r\n      game: { history, winner },\r\n    } = getState();\r\n\r\n    if (winner.name && winner.name !== 'draw')\r\n      dispatch(subtractScore({ name: winner.name, point: 1 }));\r\n\r\n    const tmpBoard = Array(BOARD_SIZE)\r\n      .fill(0)\r\n      .map(() => Array(BOARD_SIZE).fill(''));\r\n    const newHistory = [...history].splice(0, step);\r\n    const square = newHistory[step - 1];\r\n\r\n    newHistory.forEach((item) => {\r\n      tmpBoard[item.row][item.col] = item.value;\r\n    });\r\n\r\n    dispatch(moveJump({ board: tmpBoard, step }));\r\n\r\n    if (square) {\r\n      const winner = getWinMoves(square, tmpBoard);\r\n\r\n      if (winner.name) {\r\n        dispatch(setWinner({ winner }));\r\n      }\r\n    }\r\n  };\r\n","import React from 'react';\r\nimport { createStyles, makeStyles, Theme, useTheme } from '@material-ui/core/styles';\r\nimport { ClearRounded, FiberManualRecordOutlined } from '@material-ui/icons';\r\nimport { Winner } from '../../pages/Game/gameTypes';\r\nimport { OPPONENT, PLAYER, SQUARE_SIZE } from '../../global/globalConstants';\r\n\r\ninterface SquareProps {\r\n  value: string | null;\r\n  winner: Winner | null;\r\n  current: boolean;\r\n  handleClick: () => void;\r\n}\r\n\r\ninterface StyleProps {\r\n  color: string;\r\n  bgColor: string;\r\n  current: boolean;\r\n}\r\n\r\nconst useStyles = makeStyles(({ palette }: Theme) =>\r\n  createStyles({\r\n    square: ({ bgColor, current }: StyleProps) => ({\r\n      background: bgColor,\r\n      border: `1px solid #999`,\r\n      width: `${SQUARE_SIZE}px`,\r\n      height: `${SQUARE_SIZE}px`,\r\n      marginRight: '-1px',\r\n      marginTop: '-1px',\r\n      padding: 0,\r\n      cursor: 'pointer',\r\n      filter: current ? 'brightness(90%)' : '',\r\n      transition: 'background 300ms ease-in',\r\n    }),\r\n    square__text: {\r\n      width: `${SQUARE_SIZE}px`,\r\n      height: `${SQUARE_SIZE}px`,\r\n      transition: 'color 300ms ease-in',\r\n    },\r\n    square__text__x: ({ color }: StyleProps) => ({\r\n      color: color || palette.primary.main,\r\n    }),\r\n    square__text__o: ({ color }: StyleProps) => ({\r\n      color: color || palette.secondary.main,\r\n    }),\r\n  })\r\n);\r\n\r\nconst Square: React.FC<SquareProps> = ({ winner, value, handleClick, current }) => {\r\n  const { palette } = useTheme();\r\n  const squareColor = { X_COLOR: palette.primary.main, O_COLOR: palette.secondary.main };\r\n  const myStyle: StyleProps = {\r\n    color: '',\r\n    bgColor: '#fff',\r\n    current,\r\n  };\r\n\r\n  if (winner?.name === value) {\r\n    myStyle.color = '#fff';\r\n    if (winner.name === PLAYER) myStyle.bgColor = squareColor.X_COLOR;\r\n    if (winner.name === OPPONENT) myStyle.bgColor = squareColor.O_COLOR;\r\n  }\r\n\r\n  const styles = useStyles(myStyle);\r\n\r\n  return (\r\n    <div onClick={handleClick} className={styles.square}>\r\n      {value === 'X' ? (\r\n        <ClearRounded\r\n          fontSize='large'\r\n          className={`${styles.square__text} ${styles.square__text__x}`}\r\n        />\r\n      ) : (\r\n        value === 'O' && (\r\n          <FiberManualRecordOutlined\r\n            fontSize='large'\r\n            className={`${styles.square__text} ${styles.square__text__o}`}\r\n          />\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Square;\r\n","import React, { useEffect } from 'react';\r\nimport { useAppDispatch, useAppSelector } from '../../app/store';\r\nimport { BOARD_SIZE, OPPONENT, PLAYER } from '../../global/globalConstants';\r\nimport { Box } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Square as SquareType } from '../../pages/Game/gameTypes';\r\nimport { clickSquareAction, clickSquareComputerAction } from '../../pages/Game/gameActions';\r\nimport { quitGame, setOpponent } from '../../pages/Game/gameSlice';\r\nimport Square from './Square';\r\nimport { useParams } from 'react-router-dom';\r\nimport _ from 'lodash';\r\n\r\nconst useStyles = makeStyles({\r\n  board: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n});\r\n\r\nconst Board: React.FC = () => {\r\n  const styles = useStyles();\r\n  const dispatch = useAppDispatch();\r\n  const { board, winner, isTurn, history, step } = useAppSelector((state) => state.game);\r\n  const mode = useParams()['mode'];\r\n\r\n  const curSquare = history[step - 1];\r\n\r\n  useEffect(() => {\r\n    dispatch(setOpponent({ opponent: mode }));\r\n\r\n    return () => {\r\n      dispatch(quitGame());\r\n    };\r\n  }, [dispatch, mode]);\r\n\r\n  useEffect(() => {\r\n    if (!isTurn && mode === 'computer' && !winner.name) {\r\n      dispatch(clickSquareComputerAction());\r\n    }\r\n  }, [dispatch, isTurn, mode, winner]);\r\n\r\n  const handleClick = (row: number, col: number) => {\r\n    if (winner.name || board[row][col]) return;\r\n\r\n    const clickedSquare = {\r\n      row,\r\n      col,\r\n      value: isTurn ? PLAYER : OPPONENT,\r\n    } as SquareType;\r\n\r\n    dispatch(clickSquareAction(clickedSquare));\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      {board.map((rowArr, row) => (\r\n        <div key={row} className={styles.board}>\r\n          {rowArr.map((item, col) => (\r\n            <Square\r\n              key={row * BOARD_SIZE + col}\r\n              winner={winner.name && _.some(winner.moves, { row, col }) ? winner : null}\r\n              value={item}\r\n              current={curSquare && _.isEqual(curSquare, { row, col })}\r\n              handleClick={() => handleClick(row, col)}\r\n            />\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import { Box, BoxProps } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\ninterface ButtonBoxProps {\r\n  gap?: number;\r\n}\r\n\r\nconst ButtonBox: React.FC<ButtonBoxProps & BoxProps> = ({ children, gap = 0, ...props }) => {\r\n  const gapLength = gap * 8;\r\n  return (\r\n    <Box\r\n      {...props}\r\n      display='flex'\r\n      style={{ gap: `${gapLength}px`, marginBottom: `${gapLength}px` }}\r\n    >\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ButtonBox;\r\n","import React from 'react';\r\nimport { Button, ButtonProps } from '@material-ui/core';\r\n\r\ntype PrimaryButtonProps = ButtonProps;\r\n\r\nconst ButtonContained: React.FC<PrimaryButtonProps> = ({ children, ...props }) => {\r\n  return (\r\n    <Button {...props} variant='contained' color='primary' fullWidth={true}>\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default ButtonContained;\r\n","import React from 'react';\r\nimport {\r\n  FormControl,\r\n  Select as MaterialSelect,\r\n  InputLabel,\r\n  SelectProps,\r\n  MenuItemProps,\r\n} from '@material-ui/core';\r\n\r\ntype MySelectProps = SelectProps & {\r\n  name: string;\r\n  variant?: 'filled' | 'outlined' | 'standard';\r\n  children: MenuItemProps;\r\n};\r\n\r\nconst Select: React.FC<MySelectProps> = ({ name, variant = 'standard', children, ...props }) => {\r\n  return (\r\n    <FormControl variant={variant} style={{ minWidth: '10rem' }}>\r\n      <InputLabel id={`${name.toLowerCase()}-label`}>{name}</InputLabel>\r\n      <MaterialSelect\r\n        {...props}\r\n        labelId={`${name.toLowerCase()}-label`}\r\n        label={name}\r\n        id={`${name.toLowerCase()}-select`}\r\n      >\r\n        {children}\r\n      </MaterialSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { useAppDispatch, useAppSelector } from '../../app/store';\r\nimport { moveJumpAction } from '../../pages/Game/gameActions';\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Typography,\r\n  MenuItem,\r\n  List,\r\n  ListItem,\r\n  Radio,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from '@material-ui/core';\r\nimport Select from '../Form/Select';\r\n\r\nconst History: React.FC = () => {\r\n  const dispatch = useAppDispatch();\r\n  const [isAscending, toggleSort] = useState(true);\r\n  const { history, step, opponent } = useAppSelector((state) => state.game);\r\n  const historyRefs = useRef<HTMLDivElement[]>([]);\r\n\r\n  useEffect(() => {\r\n    if (historyRefs.current[step]) {\r\n      historyRefs.current[step].scrollIntoView({\r\n        behavior: 'smooth',\r\n      });\r\n    }\r\n  }, [step, isAscending]);\r\n\r\n  let historyDisplay = [...history];\r\n  historyDisplay = [{ row: -1, col: -1, value: 'Go to game start' }, ...historyDisplay];\r\n\r\n  const historyList = historyDisplay.map((item, idx) => {\r\n    const labelId = `history-list-label-${idx}`;\r\n    const text =\r\n      idx === 0 ? item.value : `${item.value} move to square (${item.row + 1}, ${item.col + 1})`;\r\n\r\n    return (\r\n      <ListItem\r\n        key={idx}\r\n        ref={(el: HTMLDivElement) => (historyRefs.current[idx] = el)}\r\n        dense\r\n        button\r\n        disabled={opponent === 'computer' && item.value === 'X'}\r\n        onClick={() => dispatch(moveJumpAction(idx))}>\r\n        <ListItemIcon>\r\n          <Radio\r\n            color='primary'\r\n            checked={step === idx}\r\n            inputProps={{ 'aria-labelledby': labelId }}\r\n          />\r\n        </ListItemIcon>\r\n        <ListItemText id={labelId} primary={text} primaryTypographyProps={{ variant: 'button' }} />\r\n      </ListItem>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Box>\r\n      <Grid container alignItems='center' spacing={2}>\r\n        <Grid item xs={2}>\r\n          <Typography variant='h6'>History</Typography>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Select\r\n            variant='outlined'\r\n            name='Sort'\r\n            defaultValue={Number(isAscending)}\r\n            onChange={() => toggleSort(!isAscending)}>\r\n            <MenuItem value={1}>Ascending</MenuItem>\r\n            <MenuItem value={0}>Descending</MenuItem>\r\n          </Select>\r\n        </Grid>\r\n      </Grid>\r\n      <List style={{ maxHeight: '300px', overflow: 'auto', marginTop: '1rem' }}>\r\n        {isAscending\r\n          ? historyList.sort((a: any, b: any) => a.key - b.key)\r\n          : historyList.sort((a: any, b: any) => b.key - a.key)}\r\n      </List>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default History;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useAppSelector, useAppDispatch } from '../../app/store';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Paper, Divider, Box, Typography } from '@material-ui/core';\r\nimport { Autorenew, ExitToApp, Undo, Redo } from '@material-ui/icons';\r\nimport { newGame } from '../../pages/Game/gameSlice';\r\nimport { moveJumpAction } from '../../pages/Game/gameActions';\r\nimport ButtonBox from '../Form/ButtonBox';\r\nimport ButtonContained from '../Form/ButtonContained';\r\nimport History from './History';\r\n\r\ninterface GameSideBarProps {}\r\n\r\nconst GameSideBar: React.FC<GameSideBarProps> = () => {\r\n  const dispatch = useAppDispatch();\r\n  const { winner, isTurn, step, history, score, opponent } = useAppSelector((state) => state.game);\r\n  const [status, setStatus] = useState('');\r\n  const redirectHistory = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!winner.name) {\r\n      setStatus(`Next Player: ${isTurn ? 'X' : 'O'}`);\r\n    } else {\r\n      const { name } = winner;\r\n      if (name === 'draw') {\r\n        setStatus('Draw');\r\n      } else {\r\n        setStatus(`Winner: ${name.toUpperCase()}`);\r\n      }\r\n    }\r\n  }, [winner, isTurn]);\r\n\r\n  return (\r\n    <Paper elevation={1} style={{ height: '100%', minHeight: '640px' }}>\r\n      <Box padding={2}>\r\n        <Box>\r\n          <ButtonBox gap={1}>\r\n            <ButtonContained startIcon={<Autorenew />} onClick={() => dispatch(newGame())}>\r\n              New Game\r\n            </ButtonContained>\r\n            <ButtonContained startIcon={<ExitToApp />} onClick={() => redirectHistory.push('/')}>\r\n              Quit Game\r\n            </ButtonContained>\r\n          </ButtonBox>\r\n          <ButtonBox gap={1}>\r\n            <ButtonContained\r\n              startIcon={<Undo />}\r\n              onClick={() => dispatch(moveJumpAction(opponent === 'player' ? step - 1 : step - 2))}\r\n              disabled={step < 1}>\r\n              Undo\r\n            </ButtonContained>\r\n            <ButtonContained\r\n              startIcon={<Redo />}\r\n              onClick={() => dispatch(moveJumpAction(opponent === 'player' ? step + 1 : step + 2))}\r\n              disabled={step >= history.length}>\r\n              Redo\r\n            </ButtonContained>\r\n          </ButtonBox>\r\n        </Box>\r\n        <Divider style={{ margin: '1rem 0' }} />\r\n        <Box>\r\n          <Typography variant='h6'>{status}</Typography>\r\n          <Typography variant='h6' display='inline'>\r\n            Score\r\n          </Typography>\r\n          <Box display='inline-flex' justifyContent='space-evenly' width='60%'>\r\n            <Typography variant='h6'>X: {score.X}</Typography>\r\n            <Typography variant='h6'>O: {score.O}</Typography>\r\n          </Box>\r\n        </Box>\r\n        <Divider style={{ margin: '1rem 0' }} />\r\n        <History />\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default GameSideBar;\r\n","import React from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport Board from '../../components/Game/Board';\r\nimport GameSideBar from '../../components/Game/GameSideBar';\r\n\r\ninterface GamePageProps {}\r\n\r\nconst GamePage: React.FC<GamePageProps> = () => {\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item style={{ display: 'grid', alignItems: 'center' }} xs={7}>\r\n        <Board />\r\n      </Grid>\r\n      <Grid item xs={5}>\r\n        <GameSideBar />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default GamePage;\r\n","import React, { ReactNode } from 'react';\r\nimport { NavLink as RouterLink, NavLinkProps } from 'react-router-dom';\r\nimport { Link } from '@material-ui/core';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(({ palette }: Theme) =>\r\n  createStyles({\r\n    menu__item: {\r\n      position: 'relative',\r\n      '&::after': {\r\n        content: '\"\"',\r\n        position: 'absolute',\r\n        bottom: '-5px',\r\n        left: '0',\r\n        width: '100%',\r\n        height: '2px',\r\n        backgroundColor: palette.primary.dark,\r\n        transform: 'scaleX(0%)',\r\n        transformOrigin: 'right',\r\n        transition: 'transform 250ms ease-out',\r\n      },\r\n      '&:hover,&:focus': {\r\n        outline: 'none',\r\n        textDecoration: 'none',\r\n      },\r\n      '&:hover::after, &:focus::after': {\r\n        transform: 'scaleX(100%)',\r\n        transformOrigin: 'left',\r\n      },\r\n    },\r\n    active: {\r\n      '&::after': {\r\n        transform: 'scaleX(100%)',\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\ninterface MyNavLinkProps extends NavLinkProps {\r\n  children: ReactNode;\r\n}\r\n\r\nconst NavLink: React.FC<MyNavLinkProps> = ({ children, ...props }) => {\r\n  const styles = useStyles();\r\n  return (\r\n    <li>\r\n      <Link\r\n        {...props}\r\n        component={RouterLink}\r\n        className={styles.menu__item}\r\n        activeClassName={styles.active}\r\n        color='inherit'\r\n        exact>\r\n        {children}\r\n      </Link>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default NavLink;\r\n","import React from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport NavLink from './NavLink';\r\n\r\nconst useStyles = makeStyles(({ typography }: Theme) =>\r\n  createStyles({\r\n    menu: {\r\n      listStyle: 'none',\r\n      display: 'flex',\r\n      flexGrow: 1,\r\n      gap: '1rem',\r\n      fontSize: typography.subtitle2.fontSize,\r\n      fontWeight: 'bold',\r\n      textTransform: 'uppercase',\r\n      letterSpacing: '2px',\r\n      '& span': {\r\n        textTransform: 'lowercase',\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\nconst NavMenu: React.FC = () => {\r\n  const styles = useStyles();\r\n  return (\r\n    <ul className={styles.menu}>\r\n      <NavLink to='/'>Home</NavLink>\r\n      <NavLink to='/game/player'>\r\n        <span>vs</span>Player\r\n      </NavLink>\r\n      <NavLink to='/game/computer'>\r\n        <span>vs</span>Computer\r\n      </NavLink>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default NavMenu;\r\n","export default __webpack_public_path__ + \"static/media/logo.fe87db53.svg\";","import React from 'react';\r\nimport { NavLink as RouterLink } from 'react-router-dom';\r\nimport { AppBar, Toolbar, Typography, Button, Link } from '@material-ui/core';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport ButtonBox from '../Form/ButtonBox';\r\nimport NavMenu from './NavMenu';\r\nimport logo from '../../logo.svg';\r\n\r\nconst useStyles = makeStyles(({ palette, typography }: Theme) =>\r\n  createStyles({\r\n    appBar: {\r\n      background: palette.common.white,\r\n      color: palette.primary.dark,\r\n      flexGrow: 1,\r\n      marginBottom: '2rem',\r\n    },\r\n    link: {\r\n      display: 'flex  ',\r\n      '&:hover': {\r\n        textDecoration: 'none',\r\n      },\r\n      '& > img': {\r\n        width: '30px',\r\n        height: '30px',\r\n        objectFit: 'cover',\r\n        marginRight: '.8rem',\r\n      },\r\n    },\r\n    title: {\r\n      fontWeight: 500,\r\n      marginRight: '3rem',\r\n    },\r\n  })\r\n);\r\n\r\nconst Navbar: React.FC = () => {\r\n  const styles = useStyles();\r\n\r\n  return (\r\n    <AppBar position='static' className={styles.appBar}>\r\n      <Toolbar>\r\n        <Typography variant='h6' className={styles.title}>\r\n          <Link component={RouterLink} color='inherit' className={styles.link} exact to='/'>\r\n            <img src={logo} alt='tic-tac-toe' />\r\n            TicTacToe\r\n          </Link>\r\n        </Typography>\r\n        <NavMenu />\r\n        <ButtonBox gap={1}>\r\n          <Button variant='contained' color='primary'>\r\n            Login\r\n          </Button>\r\n          <Button variant='outlined' color='primary'>\r\n            Register\r\n          </Button>\r\n        </ButtonBox>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst HomePage: React.FC = () => {\r\n  return (\r\n    <div>\r\n      <Typography variant='h3' color='primary' align='center'>\r\n        Tic Tac Toe\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Wrapper from '../components/Layout/Wrapper';\nimport GamePage from '../pages/Game/GamePage';\nimport Navbar from '../components/NavBar/Navbar';\nimport HomePage from '../pages/HomePage';\n\nconst App: React.FC = () => {\n  return (\n    <Router>\n      <Navbar />\n      <Wrapper>\n        <Switch>\n          <Route exact path='/' component={HomePage} />\n          <Route exact path='/game/:mode' component={GamePage} />\n        </Switch>\n      </Wrapper>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport { CssBaseline } from '@material-ui/core';\nimport { Provider } from 'react-redux';\nimport store from './app/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <CssBaseline>\n        <App />\n      </CssBaseline>\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}